#!/usr/bin/env bash
#
# Bspwm configuration
#

if ! bspc wm -g &>/dev/null; then
  echo "Bspwm is already running..exiting."
  exit 1
fi

[[ -e "${CURRENT_THEME}/bspwm" ]] && {
  source "${CURRENT_THEME}/bspwm"
}

DIR="$(cd "$(dirname "$0")" && pwd)"

[[ -f "${DIR}/device" ]] && source "$DIR/device"

hsetroot -solid "#000000"

# Remove outter padding for tiled layout
bspc subscribe desktop | while read -r _ _ _ layout; do
  spacing=15

  if [[ "$layout" == "monocle" ]]; then
      gap=0
  elif [[ "$layout" == "tiled" ]]; then
      gap=$spacing
  fi

  bspc config top_padding $(($POLYBAR_HEIGHT-$gap))
  bspc config window_gap $gap
  bspc config left_padding -$gap
  bspc config right_padding -$gap
  bspc config bottom_padding -$gap
done &

bspc rule -a VIRTUAL1 monitor=VIRTUAL1

# Various settings
bspc config gapless_monocle       true
bspc config borderless_monocle    true
bspc config single_monocle        true

bspc config split_ratio           0.52
bspc config focus_follows_pointer true

bspc config active_border_color '#000000'
bspc config normal_border_color '#000000'
bspc config focused_border_color '#222222'

bspc desktop -l monocle

bspc rule -a 'floating-term' state=floating follow=on focus=on rectangle=${KITTY_POPUP_WIDTH:-1000}x${KITTY_POPUP_HEIGHT:-1000}+0+0 center=true

bspc rule -a mpv state=floating

# Autostart applications
[[ ! $(pgrep -u $UID polybar) ]] && polybar heads-up &
[[ ! $(pgrep -u $UID kitty) ]] && kitty tmux &
[[ ! $(pgrep -u $UID picom) ]] && picom --config ~/.config/picom/picom.conf &

# Ensure shadows are only on floating windows
bspc subscribe node_state | while read -r _ _ _ node state status; do
  if [[ "$state" == "floating" ]]; then
    case "$status" in
      off) xprop -id "$node" -remove _COMPTON_SHADOW;;
      on) xprop -id "$node" -f _COMPTON_SHADOW 32c -set _COMPTON_SHADOW 1;;
    esac
  fi
done &


# Only VIRTUAL1 terminal on VIRTUAL1 desktop
bspc subscribe node_focus | while read -r event monitor desktop node; do
  bspc query --monitors --monitor ${monitor} --names | rg -q "VIRTUAL1" && {
      xwininfo -id ${node} | rg -q VIRTUAL1 || bspc node --to-monitor eDP1 --focus --activate
  }
done &

# Update polybar
# bspc subscribe node_focus | while read -r _ _ _ id ; do
#   polybar-msg hook window-title 1
#   sleep .7
#   polybar-msg hook tmux-bar 1
# done &

# BUG: This belongs in xinit, however volume/brightness fail to work or kill input all together
[[ ! $(pgrep -u $UID sxhkd) ]] && sxhkd &

hsetroot -solid "#000000"
