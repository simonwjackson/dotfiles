######################
### Plugins        ###
######################

# Plugins
set -g @tpm_plugins '              \
   tmux-plugins/tpm                \
   tmux-plugins/tmux-sensible      \
   tmux-plugins/tmux-resurrect     \
   tmux-plugins/tmux-continuum     \
   schasse/tmux-jump               \
   laktak/extrakto                 \
   imomaliev/tmux-peacock          \
   MunifTanjim/tmux-suspend        \
   MunifTanjim/tmux-mode-indicator \
   sainnhe/tmux-fzf                \
'
# Disabled: lljbash/tmux-update-display

#---------------------
# Plugin: Settings
#---------------------

# Suspend might be buggy, disabling for now
#set -g @suspend_key 'M-l'

# Auto save/restore sessions
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-save 'a'
set -g @resurrect-restore 'A'

set -g @continuum-restore 'on'
set -g @continuum-boot 'on'

set -g @extrakto_key "none"

######################
### Helpers        ###
######################

# Smart pane resizing with awareness of Vim splits.
# See: https://github.com/RyanMillerC/better-vim-tmux-resizer
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"


######################
### Base           ###
######################

# Vi copypaste mode
set-window-option -g mode-keys vi

# System Clipboard
set-option -g set-clipboard on

# Standard prefix
set-option -g prefix C-b

set -g mouse on
#set -g @mighty-scroll-interval 3
#set -g @mighty-scroll-by-line 'man fzf'
#set -g @mighty-scroll-select-pane off

# Disable right click menu
unbind-key -T root MouseDown3Pane

# Respond to focus events
set -g focus-events on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5 

# True color support
set -g default-terminal "xterm-256color"

# Apply Tc
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Auto resize to the smallest screen connected
set -g window-size smallest

# Auto resize when possible
setw -g aggressive-resize on

# bind -n 'M-Space' popup -x C -y C -w '80%' -h '50%' -R 'ls /storage/downloads | fzf --preview "viu -w 40 /storage/downloads/{}" --preview-window "right:60%"' -K -E
# bind -n 'M-A' command-prompt -p "Idea:" "run-shell -b 'nohup task add +idea %1 > /dev/null 2>&1 &'"
# bind -n 'M-a' command-prompt -p "Add task:" "run-shell -b 'nohup task add %1 > /dev/null 2>&1 &'"

# start window counting at 1
set -g base-index 1

# alter the name of the window based upon its active pane
set-window-option -g automatic-rename

# Auto renumber windows after one is removed
set-option -g renumber-windows on

# Prompt for name on new session
# bind-key -n 'M-S' command-prompt -p "Session Name:" "new-session -s '%%'"


######################
### DESIGN CHANGES ###
######################

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

set -g status-position top 
set -g status-justify centre

#is_light="cat /tmp/is_light"

# bind-key -n 'M-/' run-shell -b 'nohup ~/bin/theme/toggle > /dev/null 2>&1 &'

# if-shell -b '[ $is_light -eq 1 ]' " \
  # source-file ~/.config/tmux/tmux-colors-light.conf; \
  
source-file ~/.config/tmux/tmux-colors-dark.conf
set -g status-right '%Y-%m-%d %H:%M #{tmux_mode_indicator}'


######################
### Key Bindings   ###
######################

bind-key n display-message 'Disabled: use M-Right'
bind-key p display-message 'Disabled: use M-Left'
bind-key c display-message 'Disabled: use M-c'
bind-key z display-message 'Disabled: use M-z'
bind-key x display-message 'Disabled: use M-'
bind-key left display-message 'Disabled: use M-h'
bind-key down display-message 'Disabled: use M-j'
bind-key up display-message 'Disabled: use M-k'
bind-key right display-message 'Disabled: use M-l'
bind-key % display-message 'Disabled: use M-S-l'
bind-key '"' display-message 'Disabled: use M-S-j'

bind s display-popup -E -w 80% -h 80% nvim -c ":Telescope grep_string quit_on_select=true"

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

bind-key -n 'M-s' choose-tree -Zs

bind-key -n 'M-;' run-shell "~/.config/tmux/plugins/tmux-fzf/scripts/command.sh"
bind-key -n 'M-:' run-shell "~/.config/tmux/plugins/tmux-fzf/scripts/keybindingo.sh"

bind-key -n 'M-enter' display-popup -E -w '50%' -h '50%' -b rounded $SHELL

# Prefix: M-Space
bind-key -T root -n 'M-space' switch-client -T go_to

bind-key -T go_to t run-shell 'tmux display-popup -E -w "66%" -h "66%" -b rounded btop'
bind-key -T go_to f run-shell 'tmux display-popup -E -w "66%" -h "66%" -b rounded lf'

# Restore Home / End keys
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# Detach all other users
bind-key D detach-client -a 

# Dont ask when closing panes/windows
bind-key -n 'M-x' if-shell "$is_vim" \
  'send-keys M-x' \
  'kill-pane'

bind-key -n 'M-w' next-layout

bind-key -n 'M-f' if-shell "$is_vim" 'send-keys M-f' 'run-shell -b "${HOME}/.config/tmux/plugins/tmux-jump/scripts/tmux-jump.sh"'
bind-key -n M-e if-shell "$is_vim" "send-keys M-e" 'run-shell "${HOME}/.config/tmux/plugins/extrakto/scripts/open.sh #{pane_id}"'

# Reload config
bind-key r source-file ~/.tmux.conf \;

bind-key -n Pageup   if-shell "$is_vim" 'send-keys Pageup'   'copy-mode -u'
bind-key -n Pagedown if-shell "$is_vim" 'send-keys Pagedown' 'copy-mode -d'


#########
# Panes #
#########

# Fullscreen zoom
bind-key -n 'M-m' if-shell "$is_vim" 'send-keys M-m' 'resize-pane -Z'
bind-key -n 'M-M' run-shell "tmux resize-pane -Z \; tmux if-shell \"$is_vim\" 'send-keys M-M'"
bind-key -n 'M-C-m' resize-pane -Z

####
# Panes: Go to
###

bind-key -n 'M-h' if-shell "$is_vim" \
  'send-keys M-h' \
  'select-pane -L'
#'run-shell -b "movement west tmux"'

bind-key -n 'M-j' if-shell "$is_vim" \
  'send-keys M-j' \
  'select-pane -D'
#'run-shell -b "movement south tmux"'

bind-key -n 'M-k' if-shell "$is_vim" \
  'send-keys M-k' \
  'select-pane -U'
#'run-shell -b "movement north tmux"'

bind-key -n 'M-l' if-shell "$is_vim" \
  'send-keys M-l' \
  'select-pane -R'
#'run-shell -b "movement east tmux"'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R


####
# Panes: Create
###

bind-key -n 'M-H' run-shell -b "tmux split-pane -hbl  38% -c #{pane_current_path}"
bind-key -n 'M-J' run-shell -b "tmux split-pane -vl 38% -c #{pane_current_path}"
bind-key -n 'M-K' run-shell -b "tmux split-pane -vbl 38% -c #{pane_current_path}"
bind-key -n 'M-L' run-shell -b "tmux split-pane -hl  38% -c #{pane_current_path}"

####
# Panes: resize
###

# Precise
bind-key -n 'M-S-Left'  if-shell "$is_vim" 'send-keys M-S-Left'  'resize-pane -L 50'
bind-key -n 'M-S-Down'  if-shell "$is_vim" 'send-keys M-S-Down'  'resize-pane -D 20'
bind-key -n 'M-S-Up'    if-shell "$is_vim" 'send-keys M-S-Up'    'resize-pane -U 20'
bind-key -n 'M-S-Right' if-shell "$is_vim" 'send-keys M-S-Right' 'resize-pane -R 50'

bind-key -T copy-mode-vi 'M-S-Left'  resize-pane -L 50
bind-key -T copy-mode-vi 'M-S-Down'  resize-pane -D 25
bind-key -T copy-mode-vi 'M-S-Up'    resize-pane -U 25
bind-key -T copy-mode-vi 'M-S-Right' resize-pane -R 50

# Fast
bind-key -n 'M-S-C-Left'  if-shell "$is_vim" 'send-keys M-S-C-Left'  'resize-pane -L 10'
bind-key -n 'M-S-C-Down'  if-shell "$is_vim" 'send-keys M-S-C-Down'  'resize-pane -D 5'
bind-key -n 'M-S-C-Up'    if-shell "$is_vim" 'send-keys M-S-C-Up'    'resize-pane -U 5'
bind-key -n 'M-S-C-Right' if-shell "$is_vim" 'send-keys M-S-C-Right' 'resize-pane -R 10'

bind-key -T copy-mode-vi 'M-S-C-Left'  resize-pane -L 10
bind-key -T copy-mode-vi 'M-S-C-Down'  resize-pane -D 5
bind-key -T copy-mode-vi 'M-S-C-Up'    resize-pane -U 5
bind-key -T copy-mode-vi 'M-S-C-Right' resize-pane -R 10

####
# Panes: Swap with
###

bind-key -n 'M-C-h' if-shell "$is_vim" 'send-keys \ wh' 'swap-pane -s "{left-of}"'
bind-key -n 'M-C-j' if-shell "$is_vim" 'send-keys \ wj' 'swap-pane -s "{down-of}"'
bind-key -n 'M-C-k' if-shell "$is_vim" 'send-keys \ wk' 'swap-pane -s "{up-of}"'
bind-key -n 'M-C-l' if-shell "$is_vim" 'send-keys \ wl' 'swap-pane -s "{right-of}"'


###########
# Windows #
##########

bind-key -n 'M-X' kill-window
bind-key -n 'M-c' new-window

####
# Move window
###

# bind-key -n 'M-Down' swap-window -t -1 \; select-window -t -1
# bind-key -n 'M-Up' swap-window -t +1 \; select-window -t +1

bind-key -n 'M-Down' if-shell "$is_vim" 'send-keys M-Down'
bind-key -n 'M-Up' if-shell "$is_vim" 'send-keys M-Up'

####
# Go to window
###

bind-key -n 'M-Left' select-window -t -1
bind-key -n 'M-Right' select-window -t +1

set-option -g set-titles on
# window number,program name, active(or not)
set-option -g set-titles-string '#H:#S.#I.#{session_windows}.#P:#W:#T:tmux'


######################
### Colors         ###
######################

source-file ~/.config/tmux/tmux-colors-dark.conf

set  -g window-status-format         " #W "
set  -g window-status-current-format " #{?window_zoomed_flag,#[bg=#98c379]#[fg=#1D2026] ï€‚ ,#{window_index}} #W #{fg=default,bg=default}"

######################
### Plugins: Init  ###
######################

run-shell ~/.config/tmux/plugins/tmux-mode-indicator/mode_indicator.tmux
run-shell ~/.config/tmux/plugins/tmux-suspend/suspend.tmux
run-shell ~/.config/tmux/plugins/tmux-peacock/peacock.tmux
# run-shell ~/.config/tmux/plugins/tmux-update-display/update-display.tmux
run-shell ~/.config/tmux/plugins/tmux-resurrect/resurrect.tmux
run-shell ~/.config/tmux/plugins/tmux-continuum/continuum.tmux

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.local/share/tmux/plugins/tpm/tpm'
