[alias]
  d = difftool
  mt = mergetool # Alternative to `g mc`, `:h vimdiff` in nvim for more info (try `:dif[fupdate]`, `]c`, `do`, `dp`).
  
  cm  = commit -S --amend              # Amend the previous commit.
  cmn = commit -S --amend --no-edit    # Amend the previous commit but don't change the message.
  can = commit -S --amend --no-edit -a # Add changed files and commit with the same message.
  
  # `l` gives you history of current branch, `la` is all commits in repo, `las` is a shortlist of the important commits, `ll` shows you who and when.
  l   = log --graph --decorate --oneline                                # Graph log.
  la  = log --graph --decorate --oneline --all                          # Graph log of all commits.
  las = log --graph --decorate --oneline --all --simplify-by-decoration # Graph log of tag/branch/labelled commits.
  ll  = log --color --graph --pretty=format:'%C(214)%h%C(reset)%C(196)%d%C(reset) %s %C(35)(%cr)%C(27) <%an>%C(reset)'
  # Need to add other commands (and maybe switch to shortcuts as in https://junegunn.kr/, e.g. https://junegunn.kr/2016/07/fzf-git).
  lp = "!git log --graph --color=always --format=\"%C(auto)%h%d %s %C(black)%C(bold)<%an> %cr%C(auto)\" \"$@\" \
        | fzf --ansi -m --no-sort --reverse --tiebreak=index \
        --bind=ctrl-s:toggle-sort \
        --preview-window=top:50% \
        --preview \"(grep -o '[a-f0-9]\\{7\\}' | head -1 | xargs -I % sh -c 'git show % | delta') <<< {}\" \
        --bind \"ctrl-o:execute: (grep -o '[a-f0-9]\\{7\\}' | head -1 | xargs -I % sh -c 'git show --color=always % | LINES=0 less -R') <<< {}\" #"
  # Escape < and > for github markdown, (useful for generating changelogs).
  changelog  = "! git log --pretty=format:'* %h - %s %n%w(76,4,4)%b%n' --abbrev-commit \"$@\" | perl -0 -p -e 's/(^|[^\\\\])([<>])/\\1\\\\\\2/g ; s/(\\s*\\n)+\\*/\\n\\n*/g' #"

  sync = "! git fetch && git rebase --autostash"
  
[user]
  email = simon@simonwjackson.com
  name = Simon W. Jackson
  
[difftool]
  prompt = false
  
[diff]
  tool = vimdiff         # Use nvim vimdiff to view diffs (`git difftool`).
  
[mergetool "vimdiff"]
  cmd = nvim -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
  #cmd = nvim -d $LOCAL $REMOTE -c '$wincmd w' -c 'wincmd J'
  
[merge]
  tool = vimdiff           # Use vimdiff (actually neovim's vimdiff) to view and fix merge conflicts (instead of `g mc`).
  
[core]
  pager = delta

[interactive]
  diffFilter = delta --color-only

[delta]
  features = side-by-side line-numbers decorations
  whitespace-error-style = 22 reverse
  side-by-side = false

[delta "decorations"]
  commit-decoration-style = bold yellow box ul
  file-style = bold yellow ul
  file-decoration-style = none
